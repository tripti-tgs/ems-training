create table tbl_jobs(
  JOB_ID  varchar(255) primary key,
  JOB_TITLE  VARCHAR(255),
  MIN_SALARY  DECIMAL(10, 2),
  MAX_SALARY  DECIMAL(10, 2)
)
CREATE TABLE Tbl_Employees (
    EMPLOYEE_ID INT PRIMARY KEY,
    FIRST_NAME VARCHAR(50),
    LAST_NAME VARCHAR(50),
    EMAIL VARCHAR(50),
    PHONE_NUMBER VARCHAR(15),
    HIRE_DATE DATE,
    JOB_ID INT,
    SALARY DECIMAL(10, 2),
    EMPLOYEE_PHOTO VARCHAR(255),
    COMMISSION_PCT DECIMAL(3, 2),
    MANAGER_ID INT,
    DEPARTMENT_ID INT,
    //FOREIGN KEY (JOB_ID) REFERENCES Tbl_Jobs(JOB_ID),
    //FOREIGN KEY (DEPARTMENT_ID) REFERENCES Tbl_Departments(DEPARTMENT_ID)
);
ALTER TABLE Tbl_Employees
ADD FOREIGN KEY (JOB_ID) REFERENCES Tbl_Jobs(JOB_ID);

ALTER TABLE Tbl_Employees
ADD FOREIGN KEY (DEPARTMENT_ID) REFERENCES Tbl_Departments(DEPARTMENT_ID);

ALTER TABLE Tbl_Jobs
ADD FOREIGN KEY (MIN_SALARY, MAX_SALARY) REFERENCES Tbl_Job_Grade(LOWEST_SAL, HIGHEST_SAL);


CREATE TABLE Tbl_Departments (
    DEPARTMENT_ID  INT PRIMARY KEY,
    DEPARTMENT_NAME VARCHAR(50),
    MANAGER_ID INT,
    LOCATION_ID INT,
);
CREATE TABLE TBL_JobHistory (
    EMPLOYEE_ID INT PRIMARY KEY,
    START_DATE DATE,
    END_DATE DATE,
    JOB_ID VARCHAR,
    DEPARTMENT_ID INT
);

CREATE TABLE tbl_employee_history (
    Id INT AUTO_INCREMENT PRIMARY KEY,
    EmployeeId INT,
    FieldName VARCHAR(255),
    OldValue VARCHAR(255),
    NewValue VARCHAR(255),
    CreatedBy VARCHAR(255),
    CreatedAt TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

ALTER TABLE Tbl_Employees
ADD CONSTRAINT FK_JobID FOREIGN KEY (JOB_ID) REFERENCES Tbl_Jobs(JOB_ID),
ADD CONSTRAINT FK_DepartmentID FOREIGN KEY (DEPARTMENT_ID) REFERENCES Tbl_Departments(DEPARTMENT_ID),
ADD CONSTRAINT FK_ManagerID FOREIGN KEY (MANAGER_ID) REFERENCES Tbl_Employees(EMPLOYEE_ID);


ALTER TABLE Tbl_Departments
ADD CONSTRAINT FK_ManagerID FOREIGN KEY (MANAGER_ID) REFERENCES Tbl_Employees(EMPLOYEE_ID),
ADD CONSTRAINT FK_LocationID FOREIGN KEY (LOCATION_ID) REFERENCES Tbl_Locations(LOCATION_ID);

ALTER TABLE TBL_JobHistory
ADD CONSTRAINT FK_EmployeeID FOREIGN KEY (EMPLOYEE_ID) REFERENCES Tbl_Employees(EMPLOYEE_ID),
ADD CONSTRAINT FK_JobID_JH FOREIGN KEY (JOB_ID) REFERENCES Tbl_Jobs(JOB_ID),
ADD CONSTRAINT FK_DepartmentID_JobHistory FOREIGN KEY (DEPARTMENT_ID) REFERENCES Tbl_Departments(DEPARTMENT_ID);

========================================Get Employee By Id=======================================

DELIMITER //
CREATE PROCEDURE GetEmployeeById(IN employeeId INT)
BEGIN
  SELECT * FROM Tbl_Employees WHERE EMPLOYEE_ID = employeeId;
END //
DELIMITER ;

======================================================Get All Employees=============================================
DELIMITER //
CREATE PROCEDURE GetAllEmployees(IN p_offset INT, IN p_limit INT)
BEGIN
  SELECT * FROM Tbl_Employees LIMIT p_limit OFFSET p_offset;
END //
DELIMITER ;

=============================================Add Or Update Employee===============================================
DELIMITER //
CREATE PROCEDURE AddOrUpdateEmployee(IN EMPLOYEE_ID INT, IN FIRST_NAME VARCHAR(50), IN LAST_NAME VARCHAR(50), IN EMAIL VARCHAR(50), IN PHONE_NUMBER VARCHAR(15), IN HIRE_DATE DATE, IN JOB_ID VARCHAR(50), IN SALARY DECIMAL(10, 2), IN EMPLOYEE_PHOTO VARCHAR(255), IN COMMISSION_PCT DECIMAL(3, 2), IN MANAGER_ID INT, IN DEPARTMENT_ID INT)
BEGIN
  INSERT INTO Tbl_Employees (EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, EMPLOYEE_PHOTO, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID)
  VALUES (EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, EMPLOYEE_PHOTO, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID)
  ON DUPLICATE KEY UPDATE FIRST_NAME = FIRST_NAME, LAST_NAME = LAST_NAME, EMAIL = EMAIL, PHONE_NUMBER = PHONE_NUMBER, HIRE_DATE = HIRE_DATE, JOB_ID = JOB_ID, SALARY = SALARY, EMPLOYEE_PHOTO = EMPLOYEE_PHOTO, COMMISSION_PCT = COMMISSION_PCT, MANAGER_ID = MANAGER_ID, DEPARTMENT_ID = DEPARTMENT_ID;
END //
DELIMITER ;

======================================= Delete Employee =================================================
DELIMITER //
CREATE PROCEDURE DeleteEmployee(IN employeeId INT)
BEGIN
  DELETE FROM Tbl_Employees WHERE EMPLOYEE_ID = employeeId;
END //
DELIMITER ;


=========================== TRIGGER =================================================

DELIMITER //

CREATE TRIGGER tbl_employee_update
AFTER UPDATE ON tbl_employees
FOR EACH ROW
BEGIN
    IF NEW.first_name != OLD.first_name THEN
        INSERT INTO history (Id, FieldName, OldVal, NewVal, CreatedBy, CreatedAt)
        VALUES (NEW.EMPLOYEE_ID, 'First Name', OLD.first_name, NEW.first_name,  CURRENT_USER(), NOW());
    END IF;

    IF NEW.email != OLD.email THEN
        INSERT INTO history (Id, FieldName, OldVal, NewVal, CreatedBy, CreatedAt)
        VALUES (NEW.EMPLOYEE_ID, 'Email', OLD.email, NEW.email,  CURRENT_USER(), NOW());
    END IF;
END;
//

DELIMITER ;
